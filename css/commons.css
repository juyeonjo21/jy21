/*
자주 사용하는 디자인 코드를 모아놓은 파일
*/
@charset "UTF-8";

*{
    box-sizing: border-box;
    font-family:'NanumGothic',sans-serif;
}
/*
       컨테이너(Container)
       -화면의 단위
       -가운데 정렬되도록 구현
       -내부에 행(row)을 배치하여 원하는 화면을 구성
       */
       .container{
           margin-left:auto;
           margin-right:auto;
        }

        /*
        자주 사용할 것으로 예상되는 폭을 클래스로 지정
        - 최소 300px, 최대 1200px까지 100px 단위로 설정
        - 100부터는 비율(%)로 설정
    */
    
    .w-100{width:100%;}

    .w-300{ width:300px;}
    .w-400{ width:400px;}
    .w-500{ width:500px;}
    .w-600{ width:600px;}
    .w-700{ width:700px;}
    .w-800{ width:800px;}
    .w-900{ width:900px;}
    .w-1000{ width:1000px;}
    .w-1100{ width:1100px;}
    .w-1200{ width:1200px;}
    
    .row{
        margin:10px 0px;
    }
    /*
    정렬 스타일
    */
    .row{
        text-align:center;
    }
    .left{
        text-align:left;
    }
    .center{
        text-align:center;
    }
    .right{
        text-align:right;
    }
    /*
    입력창 디자인
    - 글자가 핵심이므로 글자 크기를 정하고 나머지를 비율(em)로 설정
    */
    .form-input, 
    .btn 
    {
        display: inline-block;
        text-decoration:none;
        font-size: 20px;
        padding: 0.5em 1em;
        outline: none; /*outline은 입력 창 선택 시 강조 효과 */
        border: 1px solid #636e72;
        border-radius: 0.1em;
        line-height: 1.2em;
    }
    /*
        입력창의 변형(확장) 스타일
        - 기본 스타일에 옵션을 추가하듯이 추가 클래스를 작성하여 적용
     */
        
    /*
         2개 클래스가 모두 적용된 경우만 디자인하도록 설정
    */
    .form-input.form-underline{ /* = 둘 다 있는 경우 */
        border-top:none;
        border-left:none;
        border-right:none;
        padding-left: 0px;
        padding-right: 0px;
    }
    /*
        입력창 변형 스타일
        - 배경이미지를 포함하는 입력창
        - backfround-image 속성 사용
        */
        
        .form-input.form-image{
            padding-left:2em;
            /* background-image:url("./images/email2.jpg"); */
            background-size:1.5em;
            background-repeat:no-repeat;
            background-position-x:0.35em;
            /* background-position-y:50%; */
            background-position-y:center;
        }
        
        /*
        textarea는 크기 조정을 resize라는 속성으로 제어한다
        */
        textarea.form-input{
            resize:vertical;
            min-height:6em;
        } 
        textarea.form-input.fixed{
            resize:none;
        }
        
        [name=memberId]{
            /* background-image:url("./images/email2.jpg"); */
        }
        [name=memberPw]{
            /* background-image:url("./images/lock.jpg"); */
        }
        
        .form-input:focus{  /*선택된 상태를 focus라고 한다*/
            border-color:#2d3436;
        }


        /*
        버튼은 역할에 따라 구분
        - 긍정버튼 : 페이지의 목적을 달성할 수 있는 버튼
        - 중립버튼 : 페이지와 아무 상관없는 버튼(기본 값)
        - 부정버튼 : 페이지의 목적을 달성할 수 없도록 하는 버튼
        */
    .btn.btn-positive{ /*긍정버튼*/
        border-color: #0984e3;
        background-color: #0984e3;
        color: white;
    }

    .btn.btn-negative {
        border-color: #e17055;
        background-color: #e17055;
        color: white;
    }

    .btn:hover
    { 
        filter:brightness(98%);
    }
    .btn{ /*기본버튼*/
        font-weight:bold;
        background-color: white;
        border-color:#2d3436;
        color:#2d3436;
        cursor:pointer;
     
    }

     /*
        간격 스타일(spacing)
        - margin, padding을 자주 사용하는 것들 위주로 클래스화
        - 기본 간격은 10px이며 10px 단위로 설정 가능하도록 구현
        - margin은 m, padding은 p로 설정
    */
    .m-10{margin:10px;}
    .m-20{margin:20px;}
    .m-30{margin:30px;}
    .m-40{margin:40px;}
    .m-50{margin:50px;}
    
    /* h -> 수평(horizontal) */
    .mh-10{margin: 0px, 10px;}
    .mh-20{margin: 0px, 20px;}
    .mh-30{margin: 0px, 30px;}
    .mh-40{margin: 0px, 40px;}
    .mh-50{margin: 0px, 50px;}

    /* v -> 수직(vartical) */
    .mv-10{margin:10px, 0px;} 
    .mv-20{margin:20px, 0px;} 
    .mv-30{margin:30px, 0px;} 
    .mv-40{margin:40px, 0px;} 
    .mv-50{margin:50px, 0px;} 

    .mt-10{margin-top:10px;}
    .mt-20{margin-top:20px;}
    .mt-30{margin-top:30px;}
    .mt-40{margin-top:40px;}
    .mt-50{margin-top:50px;}

    .mb-10{margin-bottom:10px;}
    .mb-20{margin-bottom:20px;}
    .mb-30{margin-bottom:30px;}
    .mb-40{margin-bottom:40px;}
    .mb-50{margin-bottom:50px;}

    .ms-10{margin-left:10px;}
    .ms-20{margin-left:20px;}
    .ms-30{margin-left:30px;}
    .ms-40{margin-left:40px;}
    .ms-50{margin-left:50px;}

    .me-10{margin-right:10px;}
    .me-20{margin-right:20px;}
    .me-30{margin-right:30px;}
    .me-40{margin-right:40px;}
    .me-50{margin-right:50px;}


      /*
        글자 색상과 관련된 클래스
        -아이콘에도 사용 가능
        */
    .red{color:#d63031;}
    .blue{color:#0984e3;}
    .yellow{color:#fdcb6e;}
    .green{color:#20bf6b;}
    .gray{color:#718093;}
    .black{color:#1e272e;}
    .white{color: aliceblue;}

    
    /* 영역 가운데 위치시키는 필살 클래스(2번 방법 사용) */
    .position-center{
        position:absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
    }

    /*
    메뉴 디자인

    메뉴는 계층형 구조를 가지는 가장 대표적인 도구
    list tag를 이용하여 구현(ol, ul, li)

    1차메뉴
        - 2차메뉴
            - 3차메뉴
            - 3차메뉴
        - 2차메뉴
            - 3차메뉴
            - 3차메뉴
            - 3차메뉴
        - 2차메뉴
    1차메뉴
        - 2차메뉴
            - 3차메뉴
            - 3차메뉴
        - 2차메뉴
            - 3차메뉴
            - 3차메뉴
            - 3차메뉴
        - 2차메뉴    

    ul.menu
        - li - a
            - ul
                - li - a
                - li - a
                - li - a
        - li - a
            - ul
                - li - a
                - li - a
                - li - a
*/

/* 디자인 초기화 */
ul.menu, 
ul.menu ul
{
    list-style: none;
    margin: 0px;
    padding: 0px;
}
ul.menu a {
    color: inherit;
    text-decoration: none;
}

/* 1차 메뉴의 배치를 가로 배치로 변경 */
ul.menu > li {
    display: inline-block;
}

/* 색상 변경 및 크기 설정 */
ul.menu,
ul.menu ul
{
    font-size: 24px;
    background-color: #2d3436;
}
ul.menu li {
    color: white;
    background-color: #2d3436;
    width: 150px;
}

/* 메뉴에 마우스가 올라가면 하이라이트 효과 */
ul.menu li:hover {
    background-color: #636e72;
}

/* 
    1차메뉴의 아래쪽에 2차메뉴가 위치하도록 position 변경
*/
ul.menu li {
    position: relative;
}
ul.menu ul {
    position: absolute;
    z-index: 99999;
    top: 100%;
    left: 0;
}

/*
    2차 이상의 메뉴를 숨김 처리
*/
ul.menu > li ul {
    display: none;
}

/*
    마우스가 올라간 메뉴 항목의 하위메뉴를 표시
*/
ul.menu li:hover > ul {
    display: block;
}

/*
    a 태그에 말줄임표 처리 구현
*/
ul.menu a {
    /*
        overflow로 인해 발생하는 추가 공간을 해결하기 위해 높이 설정
        - 추가공간이 생기는 이유는 overflow를 처리하기 위해 내부적으로 생성하는 공간 때문(BFC)
        - display를 inline-block으로 설정하고 세로 정렬을 지정하면 해결
        - vertical-align은 어떤 값을 주더라도 문제가 해결된다
        - 버그에 가깝다
    */
    display: inline-block;
    vertical-align: top;
    width:100%;
    padding: 0.5em;

    /* 말줄임표 처리를 위한 디자인(반드시 폭이 있어야 함) */
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap; 
}

/*
    3차 이상의 메뉴는 하단이 아니라 우측에 나오도록 변경
*/
ul.menu > li > ul > li  ul {
    top:0;
    left:100%;
}

/*
    확장 스타일 : 메뉴를 상단 고정 처리
*/
ul.menu.fixed {
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
}

/*
    링크 스타일
    - 방문한 링크는 :visited로 선택 가능
*/
a.link,
a.link:visited
{
    text-decoration: none;
    color:#2d3436;
}
a.link:hover{
    color:#0984e3;
}



